@import 'src/assets/styles/mixins/containers';
@import 'src/assets/styles/mixins/alignment';
@import 'src/assets/styles/colors';

$x-padding: 6px;
$y-padding: 8px;
$spaceFromParentElement: -8px; //was -4

:host {
  transition: none;
  & * {
    transition: none;
  }
  padding: $y-padding $x-padding;
  display: block;
  position: relative;
  z-index: 0;
  color: white;
  transition: none;
  cursor: default;
  position: absolute;
  background: $purple;
  z-index: 4;

  //   border: 1px solid $blue;
  border-radius: 6px;

  white-space: nowrap;

  text-align: left;
  //   border-color: $blue;

  //hiding popover
  width: 0;
  height: 0;
  overflow: hidden;
  opacity: 0;

  &:hover {
    color: white;
  }
}

:host.active {
  color: white;
  width: auto;
  height: auto;
  overflow: unset;
  opacity: 1;
}
.pointer {
  position: absolute;
  //   &::after,
  &::before {
    //triangle ??
    // position: absolute;
    content: '';
    display: block;
    width: 0;
    height: 0;
    border-left: 5px solid transparent;
    border-right: 5px solid transparent;
    border-bottom: 7px solid $purple;
  }
  // &::before {
  //   //triangle ??
  //   position: absolute;
  //   top: 1.5px;
  //   left: 1px;
  //   border-bottom: 6px solid $purple;
  //   border-left: 4px solid transparent;
  //   border-right: 4px solid transparent;
  // }
}

//alignment and pointerAlignment styling

:host.bottom,
:host.top {
  // transform: translateY(-100%);
  bottom: $spaceFromParentElement;
  transform: translateY(100%);

  &.pointer-right {
    right: 0px;
  }
  &.pointer-left {
    left: 0px;
  }
  &.pointer-center {
    left: 50%;
    transform: translateY(100%) translateX(-50%);
  }
  .pointer {
    top: 1px;
    transform: translateY(-100%);
  }

  .pointer.left {
    left: $x-padding;
  }
  .pointer.right {
    right: $x-padding;
  }
  .pointer.center {
    left: 50%;
    transform: translateY(-100%) translateX(-50%);
  }
}

:host.top {
  // transform: translateY(-100%);
  bottom: unset;
  top: $spaceFromParentElement;
  transform: translateY(-100%);
  &.pointer-center {
    left: 50%;
    transform: translateY(-100%) translateX(-50%);
  }

  .pointer {
    top: unset;
    bottom: 1px;
    transform: translateY(100%) rotate(180deg);
  }

  .pointer.center {
    left: 50%;
    transform: translateY(100%) translateX(-50%) rotate(180deg);
  }
}

:host.left {
  // transform: translateY(-100%);
  left: $spaceFromParentElement;
  top: 50%;
  transform: translate(-100%, -50%);

  .pointer {
    right: 2px;
    top: 50%;
    transform: translate(100%, -50%) rotate(90deg);
  }
}

:host.right {
  // transform: translateY(-100%);
  right: $spaceFromParentElement;
  top: 50%;
  transform: translate(100%, -50%);

  .pointer {
    left: 2px;
    top: 50%;
    transform: translate(-100%, -50%) rotate(270deg);
  }
}
