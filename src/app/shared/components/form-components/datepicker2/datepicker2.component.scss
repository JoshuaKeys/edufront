@import 'src/assets/styles/colors';
@import 'src/assets/styles/mixins/components';
:host {
  position: relative;
  //   background-color: red;
  @include displayFlex(stretch, stretch);
}
//animations
:host {
  cursor: pointer;
  // [active, inactive( default ), focus, disabled ]
  .wrapper {
    border-left: 1px solid transparent;
    border-right: 1px solid transparent;
    border-top: 1px solid transparent;
  }

  .wrapper:hover {
    background: #f8f9fa;

    border: 1px solid #e6e9f3;
    border-radius: 8px;
  }

  .focus.wrapper {
    background-color: #e6f3fd;
    border-color: $blue;
    border-radius: 8px;
    border: 1px solid $blue;
  }

  .active.wrapper {
    background-color: #e6f3fd;
    border-color: $blue;
    border-radius: 8px;
    border: 1px solid $blue;

    &:before {
      // transform-origin: top center;
      transform: rotate(180deg) translateY(-50%);
    }
  }

  .wrapper.disabled:hover {
    background: transparent;
    border-left: 1px solid transparent;
    border-right: 1px solid transparent;
    border-top: 1px solid transparent;
    border-radius: 0px;
  }
}
.datepicker-wo-validators {
  @include displayFlex();
  height: 100%;
  width: 100%;
}
.dp-trigger {
  flex-grow: 1;
  align-self: stretch;
  opacity: 0;
}
.dp {
  //form__input--select is a checkbox used to toggle "select" element

  &__wrapper {
    @include displayFlex();
    flex-direction: column;
    position: relative;
    border-bottom: 1px solid $grey-blue;
    height: 100%;
    width: 100%;
    &.active {
      border-color: $blue;
    }
    &:before {
      transform-origin: top center;
      width: 16px;
      height: 16px;
      right: 12.5px;
      content: '';
      display: block;
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
    }
  }
  //   &__checkbox {
  //     cursor: pointer;
  //     z-index: 2;
  //     width: 100%;
  //     position: absolute;
  //     height: 100%;
  //     opacity: 0;
  //   }

  &__label {
    &::ng-deep .edu-label {
      transition: none;
    }
    transition: none;
    font-family: Raleway;
    font-size: 14px;
    line-height: 1.45;
    order: -1;
  }
  //   //(1) text displayed when selected by element
  &__input {
    background: unset;
    line-height: 1;
    text-align: center;
    height: 100%;
    width: 100%;
    border: none;
    font-family: Raleway;
    font-size: 14px;
    line-height: 1.45;
    height: 0;
    background: transparent;
    // border-bottom: 1px solid $grey-blue;

    color: transparent;

    &::placeholder {
      color: transparent;
    }
  }
}

.input--active {
  height: auto;
  color: $black;
  &::placeholder {
    color: $black;
  }
}

.input-label {
  //wrapper for both input and label
  // position: relative;
  @include displayFlex(center, center, column);
  position: relative;
  flex-grow: 1;
  align-self: stretch;
  input {
    margin: 0;
  }
}

.prefix {
  order: -1;
}
.suffix {
  order: 1;
}

//form wrapper overwrite
.labelIsPlaceholder .label--active {
  display: none;
}

.label--active {
  top: 0;
  // transform: scale(0.8);
  text-align: center;
  .optional {
    font-size: 0;
  }
  .label__shrink-wrap {
    font-size: 0.85em;
  }
}

input {
  border: none;
  align-self: flex-end;
  margin-bottom: 10px;
  font: 400 20px/24px Raleway;
  padding: 0;
}
.center {
  label,
  input {
    text-align: center;
  }
}
.left {
  label {
    align-self: flex-start;
  }
  input {
    text-align: left;
  }
}
.right {
  label {
    align-self: flex-end;
  }
  input {
    text-align: right;
  }
}

//error
.error.wrapper.dp__wrapper {
  color: $red;
  border-bottom: 1px solid $red;
  .dp__input {
  }
  &.active {
    border-radius: 8px;
    border-color: $red;
    background-color: rgba($red, 0.1);
  }
  &:hover {
    border-color: $red;
    background-color: rgba($red, 0.1);
  }
}

//validator
.validator {
  transition: none;
  color: $red;

  //for absolute positioned validators
  &.left,
  &.right,
  &.bottom {
    position: absolute;
  }

  &.right {
    top: 50%;
    right: 0;
    transform: translate(100%, -50%);
  }
  &.left {
    top: 50%;
    left: 0;
    transform: translate(-100%, -50%);
  }
  &.bottom {
    bottom: 0;
    left: 0;
    transform: translateY(100%);
  }

  &.bottom-flow {
    position: relative;
    top: unset;
    left: unset;
    right: unset;
  }
}
